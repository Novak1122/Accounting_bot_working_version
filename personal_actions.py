import logging
from aiogram import types
import re
from bot import botdb
from dispatcher import dp


@dp.message_handler(commands="start")
async def start(message: types.Message):
    if not botdb.user_exist(message.from_user.id):
        botdb.add_user(message.from_user.id)
    users = botdb.get_users()
    logging.info(f"Users: {users}")
    await message.bot.send_message(chat_id=message.from_user.id, text="""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! 
    [–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º]
    /start ‚Äì –Ω–∞—á–∞–ª–æ —Ä–æ–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
    –î–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥ - /spent, /s, !spent, !s
    –î–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –¥–æ—Ö–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã - /earned, /e, !earned, !e
    –ö –ø—Ä–∏–º–µ—Ä—É :
    !spent 100
    /earned 300
    –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –± –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥ ‚Äì /history, /h, !history, !h
    –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ –¥–µ–Ω—å/–Ω–µ–¥–µ–ª—é/–º–µ—Å—è—Ü, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:
    !h day
    !h week
    !h month""")


@dp.message_handler(commands=("spent", "earned", "s", "e"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = (('/spent', '/s', '!spent', '!s'), ('/earned', '/e', '!earned', '!e'))
    operation = '-' if message.text.startswith(cmd_variants[0]) else '+'

    value = message.text
    for i in cmd_variants:
        for j in i:
            value = value.replace(j, '').strip()

    if len(value):
        x = re.findall(r"\d+(?:.\d+)?", value)
        if len(x):
            value = float(x[0].replace(',', '.'))

            botdb.add_record(message.from_user.id, operation, value)

            if operation == '-':
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>—Ä–∞—Å—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
            else:
                await message.reply("‚úÖ –ó–∞–ø–∏—Å—å –æ <u><b>–¥–æ—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º—É!")
    else:
        await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!")


@dp.message_handler(commands=("history", "h"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = ('/history', '/h', '!history', '!h')
    within_als = {
        "day": ('today', 'day', '—Å–µ–≥–æ–¥–Ω—è', '–¥–µ–Ω—å'),
        "week": ('week', '–Ω–µ–¥–µ–ª—é'),
        "month": ('month', '–º–µ—Å—è—Ü'),
    }

    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, '').strip()

    within = 'day'
    if len(cmd):
        for k in within_als:
            for als in within_als[k]:
                if (als == cmd):
                    within = k

    records = botdb.get_records(message.from_user.id, within)

    if len(records):
        answer = f"üïò –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {within_als[within][-1]}\n\n"

        for r in records:
            answer += "<b>" + ("‚ûñ –†–∞—Å—Ö–æ–¥" if not r[2] else "‚ûï –î–æ—Ö–æ–¥") + "</b>"
            answer += f" - {r[3]}"
            answer += f" <i>({r[4]})</i>\n"

        await message.reply(answer)
    else:
        await message.reply("–ó–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
